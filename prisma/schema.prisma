// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongodb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum Sports {
  CRICKET
  FOOTBALL
  BASKETBALL
  TENNIS
  BADMINTON
  SWIMMING
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
  REFUNDED
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String    @unique
  emailVerified DateTime?
  password      String? // For email/password auth
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())

  payments   Payment[]
  accounts   Account[]
  paymentIds PaymentId[]
}

model PaymentId {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  orderId   String
  month     String
  sports    Sports
  email     String
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
  expiresAt DateTime

  @@index([expiresAt]) // Index for efficient cleanup queries
}

model Payment {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  user          User          @relation(fields: [userId], references: [id])
  userId        String        @db.ObjectId
  amount        Float
  currency      String
  sports        Sports
  month         String
  paypalOrderId String
  paypalPayerId String?
  status        PaymentStatus @default(PENDING)
  paymentMethod String        @default("PayPal")
  createdAt     DateTime      @default(now())

  @@index([userId])
  @@index([status])
}

model Query {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String
  query     String
  createdAt DateTime @default(now())
}
